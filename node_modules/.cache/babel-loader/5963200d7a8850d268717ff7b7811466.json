{"ast":null,"code":"var _jsxFileName = \"/home/longvudang/Desktop/todo/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Fragment, useState } from 'react';\nimport AddTask from './Users/AddTask';\nimport UserList from './Users/UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [taskList, setTaskList] = useState([{\n    task: \"Learn about React\",\n    id: 'e1'\n  }, {\n    task: \"Meet friend for lunch\",\n    id: 'e2'\n  }, {\n    task: \"Build really cool todo app\",\n    id: 'e3'\n  }]);\n\n  const addTaskHandler = mtask => {\n    setTaskList(prevTask => {\n      return [...prevTask, {\n        task: mtask,\n        id: Math.random().toString()\n      }];\n    });\n  }; // const deleteTaskHandler = (id) => {\n  //   const arrayDelete= taskList.filter(delete1 => delete1.id === id);\n  //   setTaskList(arrayDelete);\n  // }\n\n\n  const deleteTaskHandler = id => {\n    const newToDo = [...taskList];\n    newToDo.splice(id, 1);\n    setTaskList(newToDo); // const arrayDelete= taskList.filter(delete1 => delete1.id === id);\n    // setTaskList(arrayDelete);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      users: taskList,\n      onDeleteTask: deleteTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      onAddTask: addTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9yRCevLHXjmB0OkrHWnreB8rIP4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/longvudang/Desktop/todo/my-app/src/App.js"],"names":["Fragment","useState","AddTask","UserList","App","taskList","setTaskList","task","id","addTaskHandler","mtask","prevTask","Math","random","toString","deleteTaskHandler","newToDo","splice"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,CAAC,CACtC;AACEM,IAAAA,IAAI,EAAE,mBADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GADsC,EAKtC;AACED,IAAAA,IAAI,EAAE,uBADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GALsC,EAStC;AACED,IAAAA,IAAI,EAAE,4BADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GATsC,CAAD,CAAvC;;AAcA,QAAMC,cAAc,GAAGC,KAAD,IAAW;AAC/BJ,IAAAA,WAAW,CAAEK,QAAD,IAAc;AACxB,aAAO,CACL,GAAGA,QADE,EAEL;AAACJ,QAAAA,IAAI,EAACG,KAAN;AAAYF,QAAAA,EAAE,EAACI,IAAI,CAACC,MAAL,GAAcC,QAAd;AAAf,OAFK,CAAP;AAID,KALU,CAAX;AAMD,GAPD,CAfa,CAuBb;AACA;AACA;AACA;;;AACA,QAAMC,iBAAiB,GAAIP,EAAD,IAAQ;AAEhC,UAAMQ,OAAO,GAAG,CAAC,GAAGX,QAAJ,CAAhB;AACAW,IAAAA,OAAO,CAACC,MAAR,CAAeT,EAAf,EAAkB,CAAlB;AACAF,IAAAA,WAAW,CAACU,OAAD,CAAX,CAJgC,CAMhC;AACA;AACD,GARD;;AAaA,sBAGE,QAAC,QAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEX,QAAjB;AAA2B,MAAA,YAAY,EAAGU;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEN;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAQD;;GAhDQL,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { Fragment, useState } from 'react';\nimport AddTask from './Users/AddTask';\nimport UserList from './Users/UserList';\nfunction App() {\n  const [taskList,setTaskList] = useState([\n    {\n      task: \"Learn about React\",\n      id: 'e1'\n    },\n    {\n      task: \"Meet friend for lunch\",\n      id: 'e2'\n    },\n    {\n      task: \"Build really cool todo app\",\n      id: 'e3'\n    }\n  ]);\n  const addTaskHandler =(mtask) => {\n    setTaskList((prevTask) => {\n      return [\n        ...prevTask,\n        {task:mtask,id:Math.random().toString()}\n      ]\n    })\n  };\n  // const deleteTaskHandler = (id) => {\n  //   const arrayDelete= taskList.filter(delete1 => delete1.id === id);\n  //   setTaskList(arrayDelete);\n  // }\n  const deleteTaskHandler = (id) => {\n    \n    const newToDo = [...taskList];\n    newToDo.splice(id,1);\n    setTaskList(newToDo);\n\n    // const arrayDelete= taskList.filter(delete1 => delete1.id === id);\n    // setTaskList(arrayDelete);\n  }\n  \n\n  \n\n  return (\n    \n    \n    <Fragment>\n      <UserList users={taskList} onDeleteTask ={deleteTaskHandler}></UserList>\n      <AddTask onAddTask={addTaskHandler}  ></AddTask>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}