{"ast":null,"code":"var _jsxFileName = \"/home/longvudang/Desktop/todo/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Fragment, useState } from 'react';\nimport AddTask from './Users/AddTask';\nimport UserList from './Users/UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [taskList, setTaskList] = useState([{\n    task: \"Learn about React\",\n    id: 'e1'\n  }, {\n    task: \"Meet friend for lunch\",\n    id: 'e2'\n  }, {\n    task: \"Build really cool todo app\",\n    id: 'e3'\n  }]);\n\n  const addTaskHandler = mtask => {\n    setTaskList(prevTask => {\n      return [...prevTask, {\n        task: mtask,\n        id: Math.random().toString()\n      }];\n    }); // const newTodos = [...taskList, { task:mtask,id:Math.random().toString() }];\n    // setTaskList(newTodos);\n  }; // const deleteTaskHandler = (id) => {\n  //   const arrayDelete= taskList.filter(delete1 => delete1.id === id);\n  //   console.log(arrayDelete)\n  //   setTaskList(arrayDelete);\n  // }\n\n\n  const deleteTaskHandler = index => {\n    const newToDo = [...taskList];\n    newToDo.splice(index, 1);\n    console.log(newToDo);\n    setTaskList(newToDo);\n    return newToDo;\n  }; // const editTaskHandler = (index) => {\n  //   let newEditItem = taskList.find((ele,index1) => {\n  //     return index1 === index \n  //   });\n  //   console.log(newEditItem);\n  // }\n\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    taskList(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UserList, {\n      users: taskList,\n      onDeleteTask: deleteTaskHandler,\n      onUpdateTask: updateTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      onAddTask: addTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9yRCevLHXjmB0OkrHWnreB8rIP4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/longvudang/Desktop/todo/my-app/src/App.js"],"names":["Fragment","useState","AddTask","UserList","App","taskList","setTaskList","task","id","addTaskHandler","mtask","prevTask","Math","random","toString","deleteTaskHandler","index","newToDo","splice","console","log","updateTodo","todoId","newValue","text","test","prev","map","item"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,CAAC,CACtC;AACEM,IAAAA,IAAI,EAAE,mBADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GADsC,EAKtC;AACED,IAAAA,IAAI,EAAE,uBADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GALsC,EAStC;AACED,IAAAA,IAAI,EAAE,4BADR;AAEEC,IAAAA,EAAE,EAAE;AAFN,GATsC,CAAD,CAAvC;;AAcA,QAAMC,cAAc,GAAGC,KAAD,IAAW;AAC/BJ,IAAAA,WAAW,CAAEK,QAAD,IAAc;AACxB,aAAO,CACL,GAAGA,QADE,EAEL;AAACJ,QAAAA,IAAI,EAACG,KAAN;AAAYF,QAAAA,EAAE,EAACI,IAAI,CAACC,MAAL,GAAcC,QAAd;AAAf,OAFK,CAAP;AAID,KALU,CAAX,CAD+B,CAO/B;AACA;AACD,GATD,CAfa,CAyBb;AACA;AACA;AACA;AACA;;;AACA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,UAAMC,OAAO,GAAG,CAAC,GAAGZ,QAAJ,CAAhB;AACAY,IAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf,EAAqB,CAArB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAX,IAAAA,WAAW,CAACW,OAAD,CAAX;AACA,WAAOA,OAAP;AACD,GAND,CA9Ba,CAqCb;AACA;AACA;AACA;AACA;AAIA;;;AACA,QAAMI,UAAU,GAAG,CAACC,MAAD,EAAQC,QAAR,KAAqB;AACtC,QAAI,CAACA,QAAQ,CAACC,IAAV,IAAkB,QAAQC,IAAR,CAAaF,QAAQ,CAACC,IAAtB,CAAtB,EAAmD;AACjD;AACD;;AACDnB,IAAAA,QAAQ,CAACqB,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAKA,IAAI,CAACpB,EAAL,KAAYc,MAAZ,GAAqBC,QAArB,GAAgCK,IAAlD,CAAT,CAAR;AACD,GALD;;AAUA,sBAGE,QAAC,QAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEvB,QAAjB;AAA2B,MAAA,YAAY,EAAGU,iBAA1C;AAA8D,MAAA,YAAY,EAAIM;AAA9E;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEZ;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAQD;;GAhEQL,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { Fragment, useState } from 'react';\nimport AddTask from './Users/AddTask';\nimport UserList from './Users/UserList';\nfunction App() {\n  const [taskList,setTaskList] = useState([\n    {\n      task: \"Learn about React\",\n      id: 'e1'\n    },\n    {\n      task: \"Meet friend for lunch\",\n      id: 'e2'\n    },\n    {\n      task: \"Build really cool todo app\",\n      id: 'e3'\n    }\n  ]);\n  const addTaskHandler =(mtask) => {\n    setTaskList((prevTask) => {\n      return [\n        ...prevTask,\n        {task:mtask,id:Math.random().toString()}\n      ]\n    })\n    // const newTodos = [...taskList, { task:mtask,id:Math.random().toString() }];\n    // setTaskList(newTodos);\n  };\n  // const deleteTaskHandler = (id) => {\n  //   const arrayDelete= taskList.filter(delete1 => delete1.id === id);\n  //   console.log(arrayDelete)\n  //   setTaskList(arrayDelete);\n  // }\n  const deleteTaskHandler = (index) => {\n    const newToDo = [...taskList];\n    newToDo.splice(index,1);\n    console.log(newToDo)\n    setTaskList(newToDo);\n    return newToDo;\n  }\n  // const editTaskHandler = (index) => {\n  //   let newEditItem = taskList.find((ele,index1) => {\n  //     return index1 === index \n  //   });\n  //   console.log(newEditItem);\n\n\n\n  // }\n  const updateTodo = (todoId,newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n    taskList(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  }\n  \n\n  \n\n  return (\n    \n    \n    <Fragment>\n      <UserList users={taskList} onDeleteTask ={deleteTaskHandler}  onUpdateTask = {updateTodo}></UserList>\n      <AddTask onAddTask={addTaskHandler}  ></AddTask>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}