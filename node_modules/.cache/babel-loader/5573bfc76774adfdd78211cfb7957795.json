{"ast":null,"code":"var _jsxFileName = \"/home/longvudang/Desktop/todo/my-app/src/Users/AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport classes from './AddTask.module.css';\nimport Button from '../UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTask = props => {\n  _s();\n\n  const [enterTask, setTask] = useState('');\n\n  const addTaskHandler = event => {\n    event.preventDefault();\n    console.log(enterTask);\n    props.onAddTask(enterTask);\n    setTask('');\n  };\n\n  const taskChangeHandler = event => {\n    setTask(event.target.value);\n  };\n\n  const editChangeHandler = event => {\n    props.edited1({\n      task: event.target.value,\n      id: props.edited.id\n    });\n  };\n\n  const saveTask = (editTask, id) => {\n    console.log(editTask, id);\n    let editedTaskList = props.taskList.map((element, index) => {\n      if (id === element.id) {\n        element.task = editTask;\n      }\n\n      return element;\n    });\n    console.log(editedTaskList);\n    props.setTaskList(editedTaskList);\n    props.edited1({\n      task: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addTaskHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"task\",\n          children: \"Input Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"task\",\n          placeholder: \"What do you need to do?\",\n          type: \"text\",\n          value: enterTask,\n          onChange: taskChangeHandler,\n          className: classes.form__input,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.button,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"task\",\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"taskEdit\",\n          placeholder: \"Edit task?\",\n          type: \"text\",\n          value: props.edited.task,\n          onChange: editChangeHandler,\n          className: classes.form__input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          onClick: () => {\n            saveTask(props.edited.task, props.edited.id);\n          },\n          children: \"Save Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTask, \"i9fH6OZjuRu+iFtR5wJuOb+W31k=\");\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/home/longvudang/Desktop/todo/my-app/src/Users/AddTask.js"],"names":["React","useState","Card","classes","Button","AddTask","props","enterTask","setTask","addTaskHandler","event","preventDefault","console","log","onAddTask","taskChangeHandler","target","value","editChangeHandler","edited1","task","id","edited","saveTask","editTask","editedTaskList","taskList","map","element","index","setTaskList","form__input","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAWC,OAAX,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMQ,cAAc,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACAD,IAAAA,KAAK,CAACQ,SAAN,CAAgBP,SAAhB;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GALD;;AAOA,QAAMO,iBAAiB,GAAIL,KAAD,IAAW;AACjCF,IAAAA,OAAO,CAACE,KAAK,CAACM,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD;;AAGA,QAAMC,iBAAiB,GAAIR,KAAD,IAAW;AACjCJ,IAAAA,KAAK,CAACa,OAAN,CAAc;AAACC,MAAAA,IAAI,EAACV,KAAK,CAACM,MAAN,CAAaC,KAAnB;AAA0BI,MAAAA,EAAE,EAACf,KAAK,CAACgB,MAAN,CAAaD;AAA1C,KAAd;AAEH,GAHD;;AAKA,QAAME,QAAQ,GAAG,CAACC,QAAD,EAAUH,EAAV,KAAiB;AAC9BT,IAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ,EAAqBH,EAArB;AAEA,QAAII,cAAc,GAAGnB,KAAK,CAACoB,QAAN,CAAeC,GAAf,CAAmB,CAACC,OAAD,EAASC,KAAT,KAAmB;AACzD,UAAIR,EAAE,KAAKO,OAAO,CAACP,EAAnB,EAAuB;AACrBO,QAAAA,OAAO,CAACR,IAAR,GAAeI,QAAf;AACD;;AACD,aAAOI,OAAP;AAED,KANoB,CAArB;AAOAhB,IAAAA,OAAO,CAACC,GAAR,CAAYY,cAAZ;AACAnB,IAAAA,KAAK,CAACwB,WAAN,CAAkBL,cAAlB;AACAnB,IAAAA,KAAK,CAACa,OAAN,CAAc;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAd;AACH,GAbD;;AAeA,sBAEI;AAAA,2BAEI,QAAC,IAAD;AAAA,8BACI;AAAM,QAAA,QAAQ,EAAEX,cAAhB;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAO,UAAA,EAAE,EAAC,MAAV;AAAiB,UAAA,WAAW,EAAC,yBAA7B;AAAwD,UAAA,IAAI,EAAE,MAA9D;AAAqE,UAAA,KAAK,EAAGF,SAA7E;AAAwF,UAAA,QAAQ,EAAEQ,iBAAlG;AAAqH,UAAA,SAAS,EAAEZ,OAAO,CAAC4B,WAAxI;AAAqJ,UAAA,QAAQ;AAA7J;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAE5B,OAAO,CAAC6B,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAO,UAAA,EAAE,EAAC,UAAV;AAAqB,UAAA,WAAW,EAAC,YAAjC;AAA+C,UAAA,IAAI,EAAE,MAArD;AAA4D,UAAA,KAAK,EAAG1B,KAAK,CAACgB,MAAN,CAAaF,IAAjF;AAAuF,UAAA,QAAQ,EAAEF,iBAAjG;AAAoH,UAAA,SAAS,EAAEf,OAAO,CAAC4B;AAAvI;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAE5B,OAAO,CAAC6B,MAA3B;AAAmC,UAAA,OAAO,EAAE,MAAK;AAC7CT,YAAAA,QAAQ,CAACjB,KAAK,CAACgB,MAAN,CAAaF,IAAd,EAAmBd,KAAK,CAACgB,MAAN,CAAaD,EAAhC,CAAR;AAA6C,WADjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgDH,CAhFD;;GAAMhB,O;;KAAAA,O;AAiFN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport Card from '../UI/Card';\nimport classes from './AddTask.module.css'\nimport Button from '../UI/Button';\nconst AddTask = (props) => {\n    const [enterTask,setTask] = useState('');\n    const addTaskHandler = (event) => {\n        event.preventDefault();\n        console.log(enterTask);\n        props.onAddTask(enterTask);\n        setTask('');\n    };\n    \n    const taskChangeHandler = (event) => {\n        setTask(event.target.value);\n    };\n    const editChangeHandler = (event) => {\n        props.edited1({task:event.target.value, id:props.edited.id});\n        \n    };\n\n    const saveTask = (editTask,id) => {\n        console.log(editTask,id)\n    \n        let editedTaskList = props.taskList.map((element,index) => {\n          if (id === element.id) {\n            element.task = editTask;\n          }\n          return element\n    \n        })\n        console.log(editedTaskList)\n        props.setTaskList(editedTaskList);\n        props.edited1({task:\"\"})\n    }\n    \n    return(\n        \n        <div>\n            \n            <Card >\n                <form onSubmit={addTaskHandler} >\n                    <label htmlFor=\"task\"  >Input Task</label>\n                    \n                    <input id='task' placeholder=\"What do you need to do?\"  type ='text' value ={enterTask} onChange={taskChangeHandler} className={classes.form__input} required></input>\n                    <Button type='submit' className={classes.button} >Add Task</Button>\n                    \n                </form>\n\n                <div>\n                    <label htmlFor=\"task\"  >Edit Task</label>\n\n                    <input id='taskEdit' placeholder=\"Edit task?\"  type ='text' value ={props.edited.task} onChange={editChangeHandler} className={classes.form__input} ></input>\n                    <Button className={classes.button} onClick={()=> {\n                        saveTask(props.edited.task,props.edited.id) }}>Save Task</Button>\n\n                </div>\n\n                \n\n{/* \n                <div>\n                    {!isEditing && (\n                        <button onClick={startEditingHandler}></button>\n                    )}\n                    {isEditing && (\n                        <div onCancel={stopEditingHandler}> \n                            <input id='taskEdit' placeholder=\"Edit task?\"  type ='text' value ={props.edited.task} \n                            onChange={editChangeHandler} className={classes.form__input} onClick={startEditingHandler}></input>\n                            <Button className={classes.button} onClick={()=> {\n                            saveTask(props.edited.task,props.edited.id) \n                            }}>Save Task</Button>\n                            \n                        </div>\n                    )}\n                </div>\n                 */}\n               \n            </Card>\n            \n                \n        </div>\n\n    );\n}\nexport default AddTask;"]},"metadata":{},"sourceType":"module"}