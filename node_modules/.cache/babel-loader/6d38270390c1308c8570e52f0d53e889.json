{"ast":null,"code":"var _jsxFileName = \"/home/longvudang/Desktop/todo/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Fragment, useEffect, useState } from 'react';\nimport AddTask from './Users/AddTask';\nimport UserList from './Users/UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [editedList, setEditedList] = useState('');\n  const [taskList, setTaskList] = useState([]);\n  const [taskListDone, setTaskListDone] = useState([]);\n\n  const addTaskHandler = mtask => {\n    setTaskList(prevTask => {\n      return [...prevTask, {\n        task: mtask,\n        id: Math.random().toString()\n      }];\n    }); // const newTodos = [...taskList, { task:mtask,id:Math.random().toString() }];\n    // setTaskList(newTodos);\n  };\n\n  useEffect(() => {\n    const getTodo = JSON.parse(localStorage.getItem('todo'));\n\n    if (getTodo) {\n      setTaskList(getTodo);\n    }\n  }, []);\n  useEffect(() => {\n    const getDone = JSON.parse(localStorage.getItem('donetask'));\n\n    if (getDone) {\n      setTaskListDone(getDone);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('donetask', JSON.stringify(taskListDone));\n  }, [taskListDone]);\n  useEffect(() => {\n    localStorage.setItem('todo', JSON.stringify(taskList));\n  }, [taskList]); // const deleteTaskHandler = (id) => {\n  //   const arrayDelete= taskList.filter(delete1 => delete1.id === id);\n  //   console.log(arrayDelete)\n  //   setTaskList(arrayDelete);\n  // }\n\n  const deleteTaskHandler = index => {\n    const newToDo = [...taskList];\n    newToDo.splice(index, 1);\n    console.log(newToDo);\n    setTaskList(newToDo);\n    setTaskListDone(newToDo);\n    return newToDo;\n  };\n\n  const editTaskHandler = index => {\n    let newEditItem = taskList.find((ele, index1) => {\n      return index1 === index;\n    });\n    console.log(newEditItem);\n    setEditedList(newEditItem);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"heading__img\",\n          src: \"https://freesvg.org/img/publicdomainq-business-man-working.png\",\n          alt: \"hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading__title\",\n          children: \"To-Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(AddTask, {\n          onAddTask: addTaskHandler,\n          edited: editedList,\n          edited1: setEditedList,\n          setTaskList: setTaskList,\n          taskList: taskList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form__label\",\n          htmlFor: \"todo\",\n          children: \"~ Today I need to ~\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserList, {\n          users: taskList,\n          onDeleteTask: deleteTaskHandler,\n          onUpdateTask: editTaskHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserList, {\n          users: taskListDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cbQ2GyXY090WZp1H0WjnU/Th28M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/longvudang/Desktop/todo/my-app/src/App.js"],"names":["Fragment","useEffect","useState","AddTask","UserList","App","editedList","setEditedList","taskList","setTaskList","taskListDone","setTaskListDone","addTaskHandler","mtask","prevTask","task","id","Math","random","toString","getTodo","JSON","parse","localStorage","getItem","getDone","setItem","stringify","deleteTaskHandler","index","newToDo","splice","console","log","editTaskHandler","newEditItem","find","ele","index1"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Fragment, useEffect, useState } from 'react';\nimport AddTask from './Users/AddTask';\nimport UserList from './Users/UserList';\nfunction App() {\n  const [editedList,setEditedList] = useState('')\n  const [taskList,setTaskList] = useState([]);\n  const [taskListDone,setTaskListDone] = useState([]);\n  const addTaskHandler =(mtask) => {\n    setTaskList((prevTask) => {\n      return [\n        ...prevTask,\n        {task:mtask,id:Math.random().toString()}\n      ]\n    })\n    // const newTodos = [...taskList, { task:mtask,id:Math.random().toString() }];\n    // setTaskList(newTodos);\n  };\n\n\n\n\n\n  useEffect(() => {\n    const getTodo = JSON.parse(localStorage.getItem('todo'))\n    \n    if(getTodo) {\n      setTaskList(getTodo)\n    }\n  },[])\n\n  \n  useEffect(() => {\n    const getDone = JSON.parse(localStorage.getItem('donetask'))\n    \n    if(getDone) {\n      setTaskListDone(getDone)\n    }\n  },[])\n\n  useEffect(() => {\n    localStorage.setItem('donetask',JSON.stringify(taskListDone))\n  },[taskListDone])\n\n\n  useEffect(() => {\n    localStorage.setItem('todo',JSON.stringify(taskList))\n  },[taskList])\n  // const deleteTaskHandler = (id) => {\n  //   const arrayDelete= taskList.filter(delete1 => delete1.id === id);\n  //   console.log(arrayDelete)\n  //   setTaskList(arrayDelete);\n  // }\n\n\n  const deleteTaskHandler = (index) => {\n    const newToDo = [...taskList];\n    newToDo.splice(index,1);\n    console.log(newToDo)\n    setTaskList(newToDo);\n    setTaskListDone(newToDo)\n    return newToDo;\n  }\n  const editTaskHandler = (index) => {\n    let newEditItem = taskList.find((ele,index1) => {\n      return index1 === index\n    });\n    console.log(newEditItem);\n    setEditedList(newEditItem);\n  }\n\n\n\n\n  \n\n\n\n  return (\n    \n    \n    <Fragment>\n      <section className='container'>\n        <div className=\"heading\">\n          <img className=\"heading__img\" src=\"https://freesvg.org/img/publicdomainq-business-man-working.png\" alt='hello'></img>\n          \n          <h1 className=\"heading__title\">To-Do List</h1>\n        </div>\n        \n        <div >\n          <AddTask onAddTask={addTaskHandler} edited={editedList} edited1={setEditedList}  setTaskList={setTaskList} taskList={taskList}></AddTask>\n          <label className=\"form__label\" htmlFor=\"todo\" >~ Today I need to ~</label>\n          <UserList users={taskList} onDeleteTask ={deleteTaskHandler}  onUpdateTask = {editTaskHandler}></UserList>\n\n\n          <UserList users={taskListDone} ></UserList>\n        </div>\n\n      </section>\n      \n     \n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}