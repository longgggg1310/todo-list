{"ast":null,"code":"var _jsxFileName = \"/home/longvudang/Desktop/todo/my-app/src/Users/UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport classes from './YsersList.module.css';\nimport Button from '../UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = props => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false); // const [editedList,setEditedList] = useState('')\n  // const startEditingHandler = () => {\n  //     setIsEditing(true);\n  // };\n  //   const stopEditingHandler = () => {\n  //     setIsEditing(false);\n  // };\n  // const saveTask = (editTask,id) => {\n  //     console.log(editTask,id)\n  //     let editedTaskList = props.taskList.map((element,index) => {\n  //       if (id === element.id) {\n  //         element.task = editTask;\n  //       }\n  //       return element\n  //     })\n  //     console.log(editedTaskList)\n  //     props.setTaskList(editedTaskList);\n  //     props.edited1({task:\"\"})\n  // }\n  // const editChangeHandler = (event) => {\n  //     props.edited1({task:event.target.value, id:props.edited.id});\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.users,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.text,\n        children: [user.task, /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            props.onDeleteTask(index);\n          },\n          children: \"Done task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            props.onUpdateTask(index);\n          },\n          children: \"Edit task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserList, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/home/longvudang/Desktop/todo/my-app/src/Users/UserList.js"],"names":["React","useState","Card","classes","Button","UserList","props","isEditing","setIsEditing","users","map","user","index","text","task","onDeleteTask","onUpdateTask","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C,CADwB,CAExB;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEE,OAAO,CAACM,KAAzB;AAAA,2BACI;AAAA,gBACKH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAMC,KAAN,kBACb;AAAkB,QAAA,SAAS,EAAET,OAAO,CAACU,IAArC;AAAA,mBACKF,IAAI,CAACG,IADV,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM;AAACR,YAAAA,KAAK,CAACS,YAAN,CAAoBH,KAApB;AAA2B,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM;AAACN,YAAAA,KAAK,CAACU,YAAN,CAAoBJ,KAApB;AAA2B,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAASD,IAAI,CAACM,EAAd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH,CArED;;GAAMZ,Q;;KAAAA,Q;AAsEN,eAAeA,QAAf","sourcesContent":["import React ,{useState} from 'react'\nimport Card from '../UI/Card';\nimport classes from './YsersList.module.css'\nimport Button from '../UI/Button';\n\n\nconst UserList = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n    // const [editedList,setEditedList] = useState('')\n\n    // const startEditingHandler = () => {\n    //     setIsEditing(true);\n    // };\n    \n    //   const stopEditingHandler = () => {\n    //     setIsEditing(false);\n    // };\n\n    // const saveTask = (editTask,id) => {\n    //     console.log(editTask,id)\n    \n    //     let editedTaskList = props.taskList.map((element,index) => {\n    //       if (id === element.id) {\n    //         element.task = editTask;\n    //       }\n    //       return element\n    \n    //     })\n    //     console.log(editedTaskList)\n    //     props.setTaskList(editedTaskList);\n    //     props.edited1({task:\"\"})\n    // }\n    // const editChangeHandler = (event) => {\n    //     props.edited1({task:event.target.value, id:props.edited.id});\n        \n    // };\n\n\n    return(\n        <Card className={classes.users} >\n            <ul>\n                {props.users.map((user,index) => (\n                    <li key={user.id} className={classes.text}>\n                        {user.task}\n                        <Button onClick={() => {props.onDeleteTask (index)} }>Done task</Button>\n                        <Button onClick={() => {props.onUpdateTask (index)}}>Edit task</Button>\n                        \n                        \n                        \n                        {/* <div>\n                            {!isEditing && (\n                                <Button onClick={() => {props.onUpdateTask (index) ; startEditingHandler()} }>Edit task</Button>\n                            )}\n\n                            {isEditing && (\n                                <div onCancel={stopEditingHandler}> \n                                    <input id='taskEdit' placeholder=\"Edit task?\"  type ='text' value ={props.edited.task} \n                                    onChange={editChangeHandler} className={classes.form__input} ></input>\n                                    <Button className={classes.button} onClick={()=> {\n                                    saveTask(props.edited.task,props.edited.id) \n                                    }}>Save Task</Button>\n                                </div>\n                            )}\n                            <Button onClick={() => {props.onDeleteTask (index)} }>Done task</Button>\n                            {/* <Button onClick={() => {props.onUpdateTask (index)}}>Edit task</Button> */}\n\n                        \n                        \n                    </li>\n                ))}\n\n            </ul>\n        </Card>\n\n    );\n}\nexport default UserList;"]},"metadata":{},"sourceType":"module"}