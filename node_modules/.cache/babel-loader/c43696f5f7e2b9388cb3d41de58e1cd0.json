{"ast":null,"code":"var _jsxFileName = \"/home/longvudang/Desktop/todo/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { Fragment, useState } from 'react';\nimport AddTask from './Users/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [taskList, setTaskList] = useState([]);\n\n  const addTaskHandler = mtask => {\n    setTaskList(prevTask => {\n      return [...prevTask, {\n        task: mtask\n      }];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AddTask, {\n      onAddTask: addTaskHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5Uk/ekOrx6pgEXe6BQ6KIZlyYYM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/longvudang/Desktop/todo/my-app/src/App.js"],"names":["logo","Fragment","useState","AddTask","App","taskList","setTaskList","addTaskHandler","mtask","prevTask","task"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,OAAP,MAAoB,iBAApB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBJ,QAAQ,CAAC,EAAD,CAAvC;;AACA,QAAMK,cAAc,GAAGC,KAAD,IAAW;AAC/BF,IAAAA,WAAW,CAAEG,QAAD,IAAc;AACxB,aAAO,CACL,GAAGA,QADE,EAEL;AAACC,QAAAA,IAAI,EAACF;AAAN,OAFK,CAAP;AAID,KALU,CAAX;AAMD,GAPD;;AAQA,sBAEE,QAAC,QAAD;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AAMD;;GAhBQH,G;;KAAAA,G;AAkBT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Fragment, useState } from 'react';\nimport AddTask from './Users/AddTask';\nfunction App() {\n  const [taskList,setTaskList] = useState([]);\n  const addTaskHandler =(mtask) => {\n    setTaskList((prevTask) => {\n      return [\n        ...prevTask,\n        {task:mtask}\n      ]\n    })\n  }\n  return (\n    \n    <Fragment>\n      <AddTask onAddTask={addTaskHandler} ></AddTask>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}