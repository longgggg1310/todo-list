{"ast":null,"code":"var _jsxFileName = \"/home/longvudang/Desktop/todo/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Fragment, useState } from 'react';\nimport AddTask from './Users/AddTask';\nimport UserList from './Users/UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [editedList, setEditedList] = useState('');\n  const [taskList, setTaskList] = useState([{\n    task: \"Learn about React\",\n    id: 'e1'\n  }, {\n    task: \"Meet friend for lunch\",\n    id: 'e2'\n  }, {\n    task: \"Build really cool todo app\",\n    id: 'e3'\n  }]);\n\n  const addTaskHandler = mtask => {\n    setTaskList(prevTask => {\n      return [...prevTask, {\n        task: mtask,\n        id: Math.random().toString()\n      }];\n    }); // const newTodos = [...taskList, { task:mtask,id:Math.random().toString() }];\n    // setTaskList(newTodos);\n  }; // const deleteTaskHandler = (id) => {\n  //   const arrayDelete= taskList.filter(delete1 => delete1.id === id);\n  //   console.log(arrayDelete)\n  //   setTaskList(arrayDelete);\n  // }\n\n\n  const deleteTaskHandler = index => {\n    const newToDo = [...taskList];\n    newToDo.splice(index, 1);\n    console.log(newToDo);\n    setTaskList(newToDo);\n    return newToDo;\n  };\n\n  const editTaskHandler = index => {\n    let newEditItem = taskList.find((ele, index1) => {\n      return index1 === index;\n    });\n    console.log(newEditItem);\n    setEditedList(newEditItem);\n  };\n\n  const saveTask = (editTask, id) => {\n    console.log(editTask, id);\n    let editedTaskList = taskList.map((element, index) => {\n      if (id === element.id) {\n        element.task = editTask;\n      }\n\n      return element;\n    });\n    console.log(editedTaskList);\n    setTaskList(editedTaskList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"heading__img\",\n          src: \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/756881/laptop.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading__title\",\n          children: \"To-Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(AddTask, {\n          onAddTask: addTaskHandler,\n          edited: editedList,\n          edited1: setEditedList,\n          edited2: saveTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form__label\",\n          for: \"todo\",\n          children: \"~ Today I need to ~\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UserList, {\n          users: taskList,\n          onDeleteTask: deleteTaskHandler,\n          onUpdateTask: editTaskHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YlYbJCk15rDYLZgu08a6rsSc+Ec=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/longvudang/Desktop/todo/my-app/src/App.js"],"names":["Fragment","useState","AddTask","UserList","App","editedList","setEditedList","taskList","setTaskList","task","id","addTaskHandler","mtask","prevTask","Math","random","toString","deleteTaskHandler","index","newToDo","splice","console","log","editTaskHandler","newEditItem","find","ele","index1","saveTask","editTask","editedTaskList","map","element"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Fragment, useState } from 'react';\nimport AddTask from './Users/AddTask';\nimport UserList from './Users/UserList';\nfunction App() {\n  const [editedList,setEditedList] = useState('')\n  const [taskList,setTaskList] = useState([\n    {\n      task: \"Learn about React\",\n      id: 'e1'\n    },\n    {\n      task: \"Meet friend for lunch\",\n      id: 'e2'\n    },\n    {\n      task: \"Build really cool todo app\",\n      id: 'e3'\n    }\n  ]);\n  const addTaskHandler =(mtask) => {\n    setTaskList((prevTask) => {\n      return [\n        ...prevTask,\n        {task:mtask,id:Math.random().toString()}\n      ]\n    })\n    // const newTodos = [...taskList, { task:mtask,id:Math.random().toString() }];\n    // setTaskList(newTodos);\n  };\n  // const deleteTaskHandler = (id) => {\n  //   const arrayDelete= taskList.filter(delete1 => delete1.id === id);\n  //   console.log(arrayDelete)\n  //   setTaskList(arrayDelete);\n  // }\n  const deleteTaskHandler = (index) => {\n    const newToDo = [...taskList];\n    newToDo.splice(index,1);\n    console.log(newToDo)\n    setTaskList(newToDo);\n    return newToDo;\n  }\n  const editTaskHandler = (index) => {\n    let newEditItem = taskList.find((ele,index1) => {\n      return index1 === index\n    });\n    console.log(newEditItem);\n    setEditedList(newEditItem);\n  }\n  const saveTask = (editTask,id) => {\n    console.log(editTask,id)\n\n    let editedTaskList = taskList.map((element,index) => {\n      if (id === element.id) {\n        element.task = editTask;\n      }\n      return element\n\n    })\n    console.log(editedTaskList)\n    setTaskList(editedTaskList);\n  }\n\n  \n\n  \n\n  return (\n    \n    \n    <Fragment>\n      <section className='container'>\n        <div className=\"heading\">\n          <img className=\"heading__img\" src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/756881/laptop.svg\"></img>\n          \n          <h1 className=\"heading__title\">To-Do List</h1>\n        </div>\n        \n        <div>\n          <AddTask onAddTask={addTaskHandler} edited={editedList} edited1={setEditedList}  edited2={saveTask} ></AddTask>\n          <label className=\"form__label\" for=\"todo\">~ Today I need to ~</label>\n          <UserList users={taskList} onDeleteTask ={deleteTaskHandler}  onUpdateTask = {editTaskHandler}></UserList>\n        </div>\n\n      </section>\n      \n     \n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}