{"ast":null,"code":"var _jsxFileName = \"/home/longvudang/Desktop/todo/my-app/src/Users/AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport classes from './AddTask.module.css';\nimport Button from '../UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTask = props => {\n  _s();\n\n  const [enterTask, setTask] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  const addTaskHandler = event => {\n    event.preventDefault();\n    console.log(enterTask);\n    props.onAddTask(enterTask);\n    setTask('');\n  };\n\n  const taskChangeHandler = event => {\n    setTask(event.target.value);\n  };\n\n  const editChangeHandler = event => {\n    props.edited1({\n      task: event.target.value,\n      id: props.edited.id\n    });\n  };\n\n  const saveTask = (editTask, id) => {\n    console.log(editTask, id);\n    let editedTaskList = props.taskList.map((element, index) => {\n      if (id === element.id) {\n        element.task = editTask;\n      }\n\n      return element;\n    });\n    console.log(editedTaskList);\n    props.setTaskList(editedTaskList);\n    props.edited1({\n      task: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addTaskHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"task\",\n          className: classes.button,\n          children: \"Input Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"task\",\n          placeholder: \"What do you need to do?\",\n          type: \"text\",\n          value: enterTask,\n          onChange: taskChangeHandler,\n          className: classes.form__input,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.button,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [!isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startEditingHandler,\n            children: \"Add New Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n          onCancel: stopEditingHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTask, \"91Qx3dFSpxfyKum/FjmnWj9HMaI=\");\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/home/longvudang/Desktop/todo/my-app/src/Users/AddTask.js"],"names":["React","useState","Card","classes","Button","AddTask","props","enterTask","setTask","isEditing","setIsEditing","startEditingHandler","stopEditingHandler","addTaskHandler","event","preventDefault","console","log","onAddTask","taskChangeHandler","target","value","editChangeHandler","edited1","task","id","edited","saveTask","editTask","editedTaskList","taskList","map","element","index","setTaskList","button","form__input"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Card from '../UI/Card';\nimport classes from './AddTask.module.css'\nimport Button from '../UI/Button';\nconst AddTask = (props) => {\n    const [enterTask,setTask] = useState('');\n    const [isEditing, setIsEditing] = useState(false);\n    \n    \n    \n    const startEditingHandler = () => {\n        setIsEditing(true);\n    };\n    \n      const stopEditingHandler = () => {\n        setIsEditing(false);\n    };\n    const addTaskHandler = (event) => {\n        event.preventDefault();\n        console.log(enterTask);\n        props.onAddTask(enterTask);\n        setTask('');\n    };\n    \n    const taskChangeHandler = (event) => {\n        setTask(event.target.value);\n    };\n    const editChangeHandler = (event) => {\n        props.edited1({task:event.target.value, id:props.edited.id});\n        \n    };\n\n    const saveTask = (editTask,id) => {\n        console.log(editTask,id)\n    \n        let editedTaskList = props.taskList.map((element,index) => {\n          if (id === element.id) {\n            element.task = editTask;\n          }\n          return element\n    \n        })\n        console.log(editedTaskList)\n        props.setTaskList(editedTaskList);\n        props.edited1({task:\"\"})\n    }\n    \n    return(\n        \n        <div>\n            \n            <Card >\n                <form onSubmit={addTaskHandler} >\n                    <label htmlFor=\"task\" className={classes.button} >Input Task</label>\n                    \n                    <input id='task' placeholder=\"What do you need to do?\"  type ='text' value ={enterTask} onChange={taskChangeHandler} className={classes.form__input} required></input>\n                    <Button type='submit' className={classes.button} >Add Task</Button>\n\n                </form>\n\n\n                <div>\n                    {!isEditing && (\n                        <div>\n                            <button onClick={startEditingHandler}>Add New Expense</button>\n                            {/* <label htmlFor=\"taskEdit\" className={classes.button}>Edit Task</label>\n                            <input id='taskEdit' placeholder=\"Edit task?\"  type ='text' value ={props.edited.task} \n                            onChange={editChangeHandler} className={classes.form__input} onClick={startEditingHandler}></input>\n                            <Button className={classes.button} onClick={()=> {\n                            saveTask(props.edited.task,props.edited.id) \n                            }}>Save Task</Button>  */}\n                        </div>\n                        \n                    )}\n                    {isEditing && (\n                        <div\n                        onCancel={stopEditingHandler}\n                        />\n                    )}\n                </div>\n                \n               \n            </Card>\n            \n                \n        </div>\n\n    );\n}\nexport default AddTask;"]},"metadata":{},"sourceType":"module"}