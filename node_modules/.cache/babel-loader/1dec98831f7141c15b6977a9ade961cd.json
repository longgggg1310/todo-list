{"ast":null,"code":"var _jsxFileName = \"/home/longvudang/Desktop/todo/my-app/src/Users/AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Error from '../UI/Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTask = props => {\n  _s();\n\n  const [enterTask, setTask] = useState('');\n  const [error, setError] = useState('');\n  const [editedTask, setEditTask] = useState('');\n\n  const addTaskHandler = event => {\n    event.preventDefault();\n\n    if (enterTask.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        message: 'Please enter a task to do'\n      });\n      return;\n    }\n\n    console.log(enterTask);\n    props.onAddTask(enterTask);\n    setTask('');\n  };\n\n  const taskChangeHandler = event => {\n    setTask(event.target.value);\n  };\n\n  const erroHandler = () => {\n    setError(null);\n  };\n\n  const editTaskHandler = index => {\n    let newEditItem = taskList.find((ele, index1) => {\n      return index1 === index;\n    });\n    setEditTask(newEditItem);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [error && /*#__PURE__*/_jsxDEV(Error, {\n        title: error.title,\n        message: error.message,\n        onConfirm: erroHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addTaskHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"task\",\n          children: \"Input Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"task\",\n          placeholder: \"What do you need to do?\",\n          type: \"text\",\n          value: enterTask,\n          onChange: taskChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskEdit\",\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"taskEdit\",\n          placeholder: \"Edit task?\",\n          type: \"text\",\n          value: editedTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  };\n};\n\n_s(AddTask, \"jIf+L6ZNt/mM5QLxZgqXKsIXJJk=\");\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/home/longvudang/Desktop/todo/my-app/src/Users/AddTask.js"],"names":["React","useState","Error","AddTask","props","enterTask","setTask","error","setError","editedTask","setEditTask","addTaskHandler","event","preventDefault","trim","length","title","message","console","log","onAddTask","taskChangeHandler","target","value","erroHandler","editTaskHandler","index","newEditItem","taskList","find","ele","index1"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAWC,OAAX,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACQ,UAAD,EAAYC,WAAZ,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;;AACA,QAAMU,cAAc,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGR,SAAS,CAACS,IAAV,GAAiBC,MAAjB,KAA4B,CAA/B,EAAkC;AAC9BP,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,KAAK,EAAE,eADF;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIA;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AACAD,IAAAA,KAAK,CAACgB,SAAN,CAAgBf,SAAhB;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AAGH,GAdD;;AAgBA,QAAMe,iBAAiB,GAAIT,KAAD,IAAW;AACjCN,IAAAA,OAAO,CAACM,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD;;AAGA,QAAMC,WAAW,GAAG,MAAK;AACrBhB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFD;;AAGA,QAAMiB,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAIC,WAAW,GAAGC,QAAQ,CAACC,IAAT,CAAc,CAACC,GAAD,EAAKC,MAAL,KAAgB;AAC9C,aAAOA,MAAM,KAAKL,KAAlB;AACD,KAFiB,CAAlB;AAGAhB,IAAAA,WAAW,CAACiB,WAAD,CAAX;AAEJ,wBAEI;AAAA,iBACKpB,KAAK,iBACN,QAAC,KAAD;AACF,QAAA,KAAK,EAAEA,KAAK,CAACS,KADX;AAEF,QAAA,OAAO,EAAET,KAAK,CAACU,OAFb;AAGF,QAAA,SAAS,EAAEO;AAHT;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAM,QAAA,QAAQ,EAAEb,cAAhB;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,EAAE,EAAC,MAAV;AAAiB,UAAA,WAAW,EAAC,yBAA7B;AAAwD,UAAA,IAAI,EAAE,MAA9D;AAAqE,UAAA,KAAK,EAAGN,SAA7E;AAAwF,UAAA,QAAQ,EAAEgB;AAAlG;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAKI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAO,UAAA,EAAE,EAAC,UAAV;AAAqB,UAAA,WAAW,EAAC,YAAjC;AAA+C,UAAA,IAAI,EAAE,MAArD;AAA4D,UAAA,KAAK,EAAGZ;AAApE;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAwBH,GA9BG;AA+BH,CAzDD;;GAAMN,O;;KAAAA,O;AA0DN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport Error from '../UI/Error';\n\nconst AddTask = (props) => {\n    const [enterTask,setTask] = useState('');\n    const [error,setError] = useState('')\n    const [editedTask,setEditTask] = useState('');\n    const addTaskHandler = (event) => {\n        event.preventDefault();\n        if(enterTask.trim().length === 0 ){\n            setError({\n                title: 'Invalid input',\n                message: 'Please enter a task to do',\n            });\n            return;\n        }\n        console.log(enterTask);\n        props.onAddTask(enterTask);\n        setTask('');\n\n\n    };\n    \n    const taskChangeHandler = (event) => {\n        setTask(event.target.value);\n    };\n    const erroHandler = () =>{\n        setError(null);\n    };\n    const editTaskHandler = (index) => {\n        let newEditItem = taskList.find((ele,index1) => {\n          return index1 === index \n        });\n        setEditTask(newEditItem);\n\n    return(\n        \n        <div>\n            {error && (\n            <Error\n          title={error.title}\n          message={error.message}\n          onConfirm={erroHandler}\n            />\n        )}\n            <form onSubmit={addTaskHandler}>\n                <label htmlFor=\"task\">Input Task</label>\n                <input id='task' placeholder=\"What do you need to do?\"  type ='text' value ={enterTask} onChange={taskChangeHandler}></input>\n                <button type='submit'>Add Task</button>\n\n                <label htmlFor=\"taskEdit\">Edit Task</label>\n                <input id='taskEdit' placeholder=\"Edit task?\"  type ='text' value ={editedTask} ></input>\n\n\n                \n            </form>\n        </div>\n\n    );\n}\n}\nexport default AddTask;"]},"metadata":{},"sourceType":"module"}