{"ast":null,"code":"var _jsxFileName = \"/home/longvudang/Desktop/todo/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { Fragment, useEffect, useState } from 'react';\nimport AddTask from './Users/AddTask';\nimport UserList from './Users/UserList';\nimport ListDone from './Users/ListDone'; // import Button from './UI/Button';\n\nimport Button from 'react-bootstrap/Button'; // import classes from './UI/Button.module.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*#__PURE__*/\n_jsxDEV(\"link\", {\n  rel: \"stylesheet\",\n  href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\",\n  integrity: \"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\",\n  crossorigin: \"anonymous\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 1\n}, this);\n\nfunction App() {\n  _s();\n\n  const [editedList, setEditedList] = useState('');\n  const [taskList, setTaskList] = useState([]);\n  const [taskListDone, setTaskListDone] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isEditing, setIsEditing] = useState(false); // const [order,setOrder] = useState('ASC');\n\n  const addTaskHandler = mtask => {\n    setTaskList(prevTask => {\n      return [...prevTask, {\n        task: mtask,\n        id: Math.random().toString()\n      }];\n    }); // const newTodos = [...taskList, { task:mtask,id:Math.random().toString() }];\n    // setTaskList(newTodos);\n  };\n\n  useEffect(() => {\n    const getTodo = JSON.parse(localStorage.getItem('todo'));\n\n    if (getTodo) {\n      setTaskList(getTodo);\n    }\n  }, []);\n  useEffect(() => {\n    const getDone = JSON.parse(localStorage.getItem('donetask')); // console.log(getDone)\n\n    if (getDone) {\n      setTaskListDone(getDone);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('donetask', JSON.stringify(taskListDone));\n  }, [taskListDone]);\n  useEffect(() => {\n    console.log(taskList);\n    localStorage.setItem('todo', JSON.stringify(taskList));\n  }, [taskList]); // useEffect (() => {\n  //   sorting();\n  // },[order])  \n\n  const deleteLocal = () => {\n    window.localStorage.removeItem('donetask');\n    setTaskListDone([]);\n  };\n\n  const deleteTaskHandler = index => {\n    const newToDo = [...taskList]; // console.log(newToDo)\n\n    const deletedTodo = newToDo[index];\n    const newDoneTaskArray = [...taskListDone, deletedTodo];\n    setTaskListDone(newDoneTaskArray);\n    newToDo.splice(index, 1);\n    setTaskList(newToDo);\n    return newToDo;\n  };\n\n  const editTaskHandler = index => {\n    let newEditItem = taskList.find((ele, index1) => {\n      return index1 === index;\n    }); // console.log(newEditItem);\n\n    setEditedList(newEditItem);\n  };\n\n  const sorting = order => {\n    if (order === 'ASC') {\n      const sort = [...taskList].sort((a, b) => a['task'].toLowerCase() > b['task'].toLowerCase() ? 1 : -1);\n      setTaskList(sort);\n      console.log(sort);\n    } else {\n      const sort = [...taskList].sort((a, b) => a['task'].toLowerCase() > b['task'].toLowerCase() ? -1 : 1);\n      setTaskList(sort);\n      console.log(sort);\n    }\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"heading__img\",\n          src: \"https://freesvg.org/img/publicdomainq-business-man-working.png\",\n          alt: \"hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading__title\",\n          children: \"To-Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(AddTask, {\n          startEditing: startEditingHandler,\n          onAddTask: addTaskHandler,\n          edited: editedList,\n          edited1: setEditedList,\n          setTaskList: setTaskList,\n          taskList: taskList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"text\",\n          className: \"form__label\",\n          htmlFor: \"todo\",\n          children: \"~ Today I need to ~\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"search1\",\n            type: \"text\",\n            placeholder: \"search\",\n            onChange: event => {\n              setSearchTerm(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            const selectSort = e.target.value;\n            sorting(selectSort);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ASC\",\n            children: \"Sorting(ASC)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DSC\",\n            children: \"Sorting(DSC)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"first\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              id: \"test1\",\n              children: \"Todo List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(UserList, {\n              users: taskList.filter(val => {\n                if (searchTerm === '') {\n                  return true;\n                } else if (val.task.includes(searchTerm.toLowerCase())) {\n                  return true;\n                } else {\n                  return false;\n                }\n              }),\n              onDeleteTask: deleteTaskHandler,\n              onUpdateTask: editTaskHandler,\n              onSorting: sorting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"first\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              id: \"test1\",\n              children: \"Task Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListDone, {\n              id: \"narrow\",\n              users: taskListDone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: deleteLocal,\n              children: \"Clear task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sM9/qj+DSkerKDkyQ6jUH8AoSq8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/longvudang/Desktop/todo/my-app/src/App.js"],"names":["Fragment","useEffect","useState","AddTask","UserList","ListDone","Button","App","editedList","setEditedList","taskList","setTaskList","taskListDone","setTaskListDone","searchTerm","setSearchTerm","isEditing","setIsEditing","addTaskHandler","mtask","prevTask","task","id","Math","random","toString","getTodo","JSON","parse","localStorage","getItem","getDone","setItem","stringify","console","log","deleteLocal","window","removeItem","deleteTaskHandler","index","newToDo","deletedTodo","newDoneTaskArray","splice","editTaskHandler","newEditItem","find","ele","index1","sorting","order","sort","a","b","toLowerCase","startEditingHandler","stopEditingHandler","event","target","value","e","selectSort","filter","val","includes"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Fragment, useEffect, useState } from 'react';\nimport AddTask from './Users/AddTask';\nimport UserList from './Users/UserList';\nimport ListDone from './Users/ListDone'\n// import Button from './UI/Button';\nimport Button from 'react-bootstrap/Button';\n\n// import classes from './UI/Button.module.css'\n<link\n  rel=\"stylesheet\"\n  href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\"\n  integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\"\n  crossorigin=\"anonymous\"\n/>\nfunction App() {\n  const [editedList,setEditedList] = useState('')\n  const [taskList,setTaskList] = useState([]);\n  const [taskListDone,setTaskListDone] = useState([]);\n  const [searchTerm,setSearchTerm] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n\n  // const [order,setOrder] = useState('ASC');\n  const addTaskHandler =(mtask) => {\n    setTaskList((prevTask) => {\n      return [\n        ...prevTask,\n        {task:mtask,id:Math.random().toString()}\n      ]\n    })\n    // const newTodos = [...taskList, { task:mtask,id:Math.random().toString() }];\n    // setTaskList(newTodos);\n  };\n\n  useEffect(() => {\n    const getTodo = JSON.parse(localStorage.getItem('todo'))\n\n    if(getTodo) {\n      setTaskList(getTodo)\n    }\n  },[])\n\n  \n  useEffect(() => {\n    const getDone = JSON.parse(localStorage.getItem('donetask'))\n    // console.log(getDone)\n    if(getDone) {\n      setTaskListDone(getDone)\n    }\n  },[])\n\n  useEffect(() => {\n    localStorage.setItem('donetask',JSON.stringify(taskListDone))\n  },[taskListDone])\n\n\n  useEffect(() => {\n    console.log(taskList)\n    localStorage.setItem('todo',JSON.stringify(taskList))\n  },[taskList])\n  // useEffect (() => {\n  //   sorting();\n  // },[order])  \n  const deleteLocal = () => {\n    window.localStorage.removeItem('donetask'); \n    setTaskListDone([]);\n  }\n\n  const deleteTaskHandler = (index) => {\n    const newToDo = [...taskList];\n    // console.log(newToDo)\n    const deletedTodo = newToDo[index] \n    const newDoneTaskArray = [...taskListDone,deletedTodo]\n    setTaskListDone(newDoneTaskArray)\n    newToDo.splice(index,1);\n    setTaskList(newToDo);\n    return newToDo;\n  }\n  const editTaskHandler = (index) => {\n    let newEditItem = taskList.find((ele,index1) => {\n      return index1 === index\n    });\n    // console.log(newEditItem);\n    setEditedList(newEditItem);\n  };\n  const sorting = (order) => {\n    if(order === 'ASC') { \n      const sort = [...taskList].sort((a, b)=> a['task'].toLowerCase() > b['task'].toLowerCase() ? 1 : -1);\n      setTaskList(sort);\n      console.log(sort)\n    }else{\n      const sort = [...taskList].sort((a, b)=> a['task'].toLowerCase() > b['task'].toLowerCase() ? -1 : 1);\n      setTaskList(sort);\n      console.log(sort)\n    }\n\n    \n  };\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n      setIsEditing(false);\n  };\n  return (\n    \n    \n    <Fragment>\n      <section className='container'>\n        <div className=\"heading\">\n          <img className=\"heading__img\" src=\"https://freesvg.org/img/publicdomainq-business-man-working.png\" alt='hello'></img>\n          \n          <h1 className=\"heading__title\">To-Do List</h1>\n        </div>\n        \n        <div>\n          <AddTask startEditing={startEditingHandler}onAddTask={addTaskHandler} edited={editedList} edited1={setEditedList}  setTaskList={setTaskList} taskList={taskList}></AddTask>\n          <label id = 'text'className=\"form__label\" htmlFor=\"todo\" >~ Today I need to ~</label>\n          {/* <Button onClick={() => sorting()}>Sorting</Button> */}\n\n\n            <div >\n              {/* <b class='text'>Search   </b> */}\n              <input id ='search1'type='text' placeholder='search' onChange={event => {setSearchTerm(event.target.value);\n              }}></input>   \n            </div>\n\n         \n\n\n\n\n          {/* <b>Search</b>\n          <input id ='search'type='text' placeholder='search' onChange={event => {setSearchTerm(event.target.value);\n          }}></input> */}\n          {/* <div> <Button onClick={() => sorting()} className={classes.button} >Sorting(ASC)</Button> </div> */}\n\n\n            <select onChange={(e) => {const selectSort = e.target.value; sorting(selectSort)} }>\n              <option value = 'ASC'>Sorting(ASC)</option>\n              <option value= 'DSC'>Sorting(DSC)</option>\n            </select>\n            <div id='wrap'>\n              <div id='first' >\n                <b id='test1'>Todo List</b>\n\n                <UserList  users={taskList.filter((val) =>{\n                  \n                  if(searchTerm === ''){\n                    return true\n                  }else if(val.task.includes(searchTerm.toLowerCase())){\n                    return true\n                    \n                  }else{\n                    return false\n                  }\n                \n                })} onDeleteTask ={deleteTaskHandler}  onUpdateTask = {editTaskHandler} onSorting = {sorting} ></UserList>\n                \n              </div>\n              <div id='first'> \n                <b id='test1'>Task Done</b>\n                <ListDone id = 'narrow' users={taskListDone} ></ListDone>\n                <Button onClick={deleteLocal}>Clear task</Button>\n              </div>\n            </div>\n            \n            \n        </div>\n          \n        \n      </section>    \n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}