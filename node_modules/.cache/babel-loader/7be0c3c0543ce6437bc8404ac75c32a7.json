{"ast":null,"code":"var _jsxFileName = \"/home/longvudang/Desktop/todo/my-app/src/Users/AddTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Error from '../UI/Error';\nimport Card from '../UI/Card';\nimport classes from './AddTask.module.css';\nimport Button from '../UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTask = props => {\n  _s();\n\n  const [enterTask, setTask] = useState('');\n  const [error, setError] = useState();\n  const [editedTask, setEditTask] = useState('');\n\n  const addTaskHandler = event => {\n    event.preventDefault();\n\n    if (enterTask.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        message: 'Please enter a task to do'\n      });\n      return;\n    }\n\n    console.log(enterTask);\n    props.onAddTask(enterTask);\n    setTask('');\n  };\n\n  const taskChangeHandler = event => {\n    setTask(event.target.value);\n  };\n\n  const editChangeHandler = event => {\n    props.edited1({\n      task: event.target.value,\n      id: props.edited.id\n    });\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(Error, {\n      title: error.title,\n      message: error.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addTaskHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"task\",\n          className: classes.button,\n          children: \"Input Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"task\",\n          placeholder: \"What do you need to do?\",\n          type: \"text\",\n          value: enterTask,\n          onChange: taskChangeHandler,\n          className: classes.form__input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.button,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"taskEdit\",\n        className: classes.button,\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"taskEdit\",\n        placeholder: \"Edit task?\",\n        type: \"text\",\n        value: props.edited.task,\n        onChange: editChangeHandler,\n        className: classes.form__input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        onClick: () => {\n          props.edited2(props.edited.task, props.edited.id);\n        },\n        children: \"Save Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTask, \"JDiGgYSpG8ArNIJo9el/UTSzTCE=\");\n\n_c = AddTask;\nexport default AddTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"sources":["/home/longvudang/Desktop/todo/my-app/src/Users/AddTask.js"],"names":["React","useState","Error","Card","classes","Button","AddTask","props","enterTask","setTask","error","setError","editedTask","setEditTask","addTaskHandler","event","preventDefault","trim","length","title","message","console","log","onAddTask","taskChangeHandler","target","value","editChangeHandler","edited1","task","id","edited","errorHandler","button","form__input","edited2"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Error from '../UI/Error';\nimport Card from '../UI/Card';\nimport classes from './AddTask.module.css'\nimport Button from '../UI/Button';\nconst AddTask = (props) => {\n    const [enterTask,setTask] = useState('');\n    const [error, setError] = useState();\n    const [editedTask,setEditTask] = useState('');\n\n    const addTaskHandler = (event) => {\n        event.preventDefault();\n        if(enterTask.trim().length === 0 ){\n            setError({\n                title: 'Invalid input',\n                message: 'Please enter a task to do',\n            });\n            return;\n        }\n        console.log(enterTask);\n        props.onAddTask(enterTask);\n        setTask('');\n\n\n    };\n    \n    const taskChangeHandler = (event) => {\n        setTask(event.target.value);\n    };\n    const editChangeHandler = (event) => {\n        props.edited1({task:event.target.value, id:props.edited.id});\n    };\n    const errorHandler = () =>{\n        setError(null);\n    };\n\n    return(\n        \n        <div>\n            {error && (\n                <Error\n                title={error.title}\n                message={error.message}\n                onConfirm={errorHandler}\n                />\n            )}\n            <Card >\n                <form onSubmit={addTaskHandler} >\n                    <label htmlFor=\"task\" className={classes.button} >Input Task</label>\n                    \n                    <input id='task' placeholder=\"What do you need to do?\"  type ='text' value ={enterTask} onChange={taskChangeHandler} className={classes.form__input}></input>\n                    <Button type='submit' className={classes.button} >Add Task</Button>\n\n                </form>\n                \n                <label htmlFor=\"taskEdit\" className={classes.button}>Edit Task</label>\n\n                <input id='taskEdit' placeholder=\"Edit task?\"  type ='text' value ={props.edited.task} onChange={editChangeHandler} className={classes.form__input}></input>\n                <Button className={classes.button} onClick={()=> {\n                    props.edited2(props.edited.task,props.edited.id) \n                }}>Save Task</Button>\n\n            </Card>\n            \n                \n        </div>\n\n    );\n}\nexport default AddTask;"]},"metadata":{},"sourceType":"module"}