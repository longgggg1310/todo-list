{"ast":null,"code":"var _jsxFileName = \"/home/longvudang/Desktop/todo/my-app/src/Users/UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport classes from './YsersList.module.css';\nimport Button from '../UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = props => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedList, setEditedList] = useState('');\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  const saveTask = (editTask, id) => {\n    console.log(editTask, id);\n    let editedTaskList = props.taskList.map((element, index) => {\n      if (id === element.id) {\n        element.task = editTask;\n      }\n\n      return element;\n    });\n    console.log(editedTaskList);\n    props.setTaskList(editedTaskList);\n    props.edited1({\n      task: \"\"\n    });\n  };\n\n  const editChangeHandler = event => {\n    props.edited1({\n      task: event.target.value,\n      id: props.edited.id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.users,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.text,\n        children: [user.task, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [!isEditing && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              props.onUpdateTask(index);\n              startEditingHandler();\n            },\n            children: \"Edit task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n            onCancel: stopEditingHandler,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"taskEdit\",\n              placeholder: \"Edit task?\",\n              type: \"text\",\n              value: props.edited.task,\n              onChange: editChangeHandler,\n              className: classes.form__input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.button,\n              onClick: () => {\n                saveTask(props.edited.task, props.edited.id);\n              },\n              children: \"Save Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              props.onDeleteTask(index);\n            },\n            children: \"Done task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserList, \"LSSNYOCWP6P8TfJi4NSIvbCk6KM=\");\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/home/longvudang/Desktop/todo/my-app/src/Users/UserList.js"],"names":["React","useState","Card","classes","Button","UserList","props","isEditing","setIsEditing","editedList","setEditedList","startEditingHandler","stopEditingHandler","saveTask","editTask","id","console","log","editedTaskList","taskList","map","element","index","task","setTaskList","edited1","editChangeHandler","event","target","value","edited","users","user","text","onUpdateTask","form__input","button","onDeleteTask"],"mappings":"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","sourcesContent":["import React ,{useState} from 'react'\nimport Card from '../UI/Card';\nimport classes from './YsersList.module.css'\nimport Button from '../UI/Button';\n\n\nconst UserList = (props) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedList,setEditedList] = useState('')\n\n    const startEditingHandler = () => {\n        setIsEditing(true);\n    };\n    \n      const stopEditingHandler = () => {\n        setIsEditing(false);\n    };\n\n    const saveTask = (editTask,id) => {\n        console.log(editTask,id)\n    \n        let editedTaskList = props.taskList.map((element,index) => {\n          if (id === element.id) {\n            element.task = editTask;\n          }\n          return element\n    \n        })\n        console.log(editedTaskList)\n        props.setTaskList(editedTaskList);\n        props.edited1({task:\"\"})\n    }\n    const editChangeHandler = (event) => {\n        props.edited1({task:event.target.value, id:props.edited.id});\n        \n    };\n\n\n    return(\n        <Card className={classes.users} >\n            <ul>\n                {props.users.map((user,index) => (\n                    <li key={user.id} className={classes.text}>\n                        {user.task}\n                        \n                        \n                        \n                        <div>\n                            {!isEditing && (\n                                <Button onClick={() => {props.onUpdateTask (index) ; startEditingHandler()} }>Edit task</Button>\n                            )}\n\n                            {isEditing && (\n                                <div onCancel={stopEditingHandler}> \n                                    <input id='taskEdit' placeholder=\"Edit task?\"  type ='text' value ={props.edited.task} \n                                    onChange={editChangeHandler} className={classes.form__input} ></input>\n                                    <Button className={classes.button} onClick={()=> {\n                                    saveTask(props.edited.task,props.edited.id) \n                                    }}>Save Task</Button>\n                                </div>\n                            )}\n                            <Button onClick={() => {props.onDeleteTask (index)} }>Done task</Button>\n                            {/* <Button onClick={() => {props.onUpdateTask (index)}}>Edit task</Button> */}\n\n                        </div>\n                        \n                    </li>\n                ))}\n\n            </ul>\n        </Card>\n\n    );\n}\nexport default UserList;"]},"metadata":{},"sourceType":"module"}